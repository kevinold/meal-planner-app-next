enum MealStatus {
  PENDING
  CURRENT
  SCHEDULED
  PAUSED
}

enum MealFrequency {
  WEEKLY
  BIWEEKLY
  MONTHLY
  BIMONTHLY
  QUARTERLY
  BIQUARTERLY
}

type MealUserGroup
  @model
  @auth(
    rules: [
      { allow: owner }
      # https://docs.amplify.aws/guides/functions/graphql-from-lambda/q/platform/js/#iam-authorization
      { allow: private, provider: iam }
    ]
  ) {
  id: ID!
  owner: String! @index(name: "byOwner", queryField: "mealUserGroupByOwner")
  inviteCode: String!
    @index(name: "byInviteCode", queryField: "mealUserGroupByInviteCode")
  members: ID
}

type Meal
  @model
  @auth(
    rules: [
      { allow: owner }
      { allow: groups, groupClaim: "mealUserGroup", groupsField: "group" }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  status: MealStatus
  lastOccurrence: AWSDate
  nextOccurrence: AWSDate
  freq: MealFrequency
  history: [MealHistory] @hasMany
  group: String
}

type MealHistory @model @auth(rules: [{ allow: private }]) {
  id: ID!
  confirmed: Boolean
}

type Query {
  getMealUserGroupByOwner(owner: String!): MealUserGroup
    @auth(rules: [{ allow: private, provider: iam }])
}

input JoinMealUserGroupInput {
  userId: ID!
  inviteCode: String!
}

type Mutation {
  joinMealUserGroup(input: JoinMealUserGroupInput): String
    @function(name: "joinMealUserGroupFunc-${env}")
    @auth(rules: [{ allow: private }])
}
